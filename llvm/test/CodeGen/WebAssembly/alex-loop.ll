; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mattr=+alex-carry,+alex-overflow,+alex-misc < %s | FileCheck %s --check-prefix=CARRY

target triple = "wasm32-unknown-unknown"

define void @add_many(ptr %a, ptr %b, ptr %c) #0 {
; CARRY-LABEL: add_many:
; CARRY:         .functype add_many (i32, i32, i32) -> ()
; CARRY-NEXT:    .local i32, i64, i32, i32, i64, i32, i32
; CARRY-NEXT:  # %bb.0: # %start
; CARRY-NEXT:    i32.const 0
; CARRY-NEXT:    local.set 3
; CARRY-NEXT:    i64.const 0
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:  .LBB0_1: # %loop
; CARRY-NEXT:    # =>This Inner Loop Header: Depth=1
; CARRY-NEXT:    loop # label0:
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    local.get 0
; CARRY-NEXT:    local.get 3
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    local.tee 5
; CARRY-NEXT:    i64.load 0
; CARRY-NEXT:    i64.add_overflow_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    i64.const 0
; CARRY-NEXT:    i64.const 0
; CARRY-NEXT:    local.get 6
; CARRY-NEXT:    i64.add_with_carry_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 7
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    local.get 1
; CARRY-NEXT:    local.get 3
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    local.tee 8
; CARRY-NEXT:    i64.load 0
; CARRY-NEXT:    i64.add_overflow_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    local.get 2
; CARRY-NEXT:    local.get 3
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    local.tee 9
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    i64.store 0
; CARRY-NEXT:    local.get 7
; CARRY-NEXT:    i64.const 0
; CARRY-NEXT:    local.get 6
; CARRY-NEXT:    i64.add_with_carry_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    local.get 5
; CARRY-NEXT:    i32.const 8
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    i64.load 0
; CARRY-NEXT:    i64.add_overflow_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    local.get 8
; CARRY-NEXT:    i32.const 8
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    i64.load 0
; CARRY-NEXT:    i64.add_overflow_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    local.get 9
; CARRY-NEXT:    i32.const 8
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    local.get 4
; CARRY-NEXT:    i64.store 0
; CARRY-NEXT:    local.get 6
; CARRY-NEXT:    i64.extend_i32_u
; CARRY-NEXT:    i64.const 0
; CARRY-NEXT:    local.get 6
; CARRY-NEXT:    i64.add_with_carry_u
; CARRY-NEXT:    local.set 6
; CARRY-NEXT:    local.set 4
; CARRY-NEXT:    local.get 3
; CARRY-NEXT:    i32.const 16
; CARRY-NEXT:    i32.add
; CARRY-NEXT:    local.tee 3
; CARRY-NEXT:    i32.const 1024
; CARRY-NEXT:    i32.ne
; CARRY-NEXT:    br_if 0 # 0: up to label0
; CARRY-NEXT:  # %bb.2: # %done
; CARRY-NEXT:    end_loop
; CARRY-NEXT:    # fallthrough-return
start:
  br label %loop

loop:
  %carry = phi i128 [ 0, %start ], [ %carry_out, %loop ]
  %iter = phi i32 [ 0, %start ], [ %iter_next, %loop ]

  ;; unroll 0
  %a0_ptr = getelementptr inbounds i64, ptr %a, i32 %iter
  %b0_ptr = getelementptr inbounds i64, ptr %b, i32 %iter
  %c0_ptr = getelementptr inbounds i64, ptr %c, i32 %iter
  %a0 = load i64, ptr %a0_ptr, align 8
  %b0 = load i64, ptr %b0_ptr, align 8
  %a0_128 = zext i64 %a0 to i128
  %b0_128 = zext i64 %b0 to i128
  %tmp = add nuw nsw i128 %carry, %a0_128
  %c0_128 = add nuw nsw i128 %tmp, %b0_128
  %carry_tmp = lshr i128 %c0_128, 64
  %c0 = trunc i128 %c0_128 to i64
  store i64 %c0, ptr %c0_ptr, align 8

  ;; unroll 1
  %iterp1 = or disjoint i32 %iter, 1
  %a1_ptr = getelementptr inbounds i64, ptr %a, i32 %iterp1
  %b1_ptr = getelementptr inbounds i64, ptr %b, i32 %iterp1
  %c1_ptr = getelementptr inbounds i64, ptr %c, i32 %iterp1
  %a1 = load i64, ptr %a1_ptr, align 8
  %b1 = load i64, ptr %b1_ptr, align 8
  %a1_128 = zext i64 %a1 to i128
  %b1_128 = zext i64 %b1 to i128
  %tmp.1 = add nuw nsw i128 %carry_tmp, %a1_128
  %c1_128 = add nuw nsw i128 %tmp.1, %b1_128
  %carry_out = lshr i128 %c1_128, 64
  %c1 = trunc i128 %c1_128 to i64
  store i64 %c1, ptr %c1_ptr, align 8

  ;; loop condition
  %iter_next = add nuw nsw i32 %iter, 2
  %is_done = icmp eq i32 %iter_next, 128
  br i1 %is_done, label %done, label %loop

done:
  ret void
}

attributes #0 = { "target-features"="+alex-overflow,+alex-carry" }

